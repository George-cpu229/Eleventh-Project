{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Preloader","Post","item","message","likes","MyPosts","memo","postElements","posts","reverse","map","p","likesCount","postsBlock","AddNewPostReduxForm","onSubmit","values","addPost","newPostText","maxLendth10","maxLendthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.93d18a45.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component{\r\n    render() {\r\n        if(!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n        return <Component {...this.props}/>\r\n    \r\n}\r\n}\r\n\r\nlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n  \r\nreturn ConnectedAuthRedirectComponent;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__32p1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1GCvw\",\"posts\":\"MyPosts_posts__LngGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__PYIpx\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileStatusWithHooks = (props) => {   \r\n \r\nconst [editMode, setEditMode] = useState(false);\r\nconst [status, setStatus] = useState(props.status);\r\n\r\nuseEffect( () => {\r\n setStatus(props.status);\r\n}, [props.status]);\r\n\r\nconst activateEditMode = () => { \r\n setEditMode(true);\r\n}\r\nconst deactivateMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n}\r\n\r\nconst onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n{ !editMode &&\r\n<div>\r\n<span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n</div>\r\n}\r\n{ editMode &&\r\n<div>\r\n<input onChange={onStatusChange} onBlur={deactivateMode} autoFocus={true} value={status}  />\r\n</div>\r\n}\r\n</div>\r\n)\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatusWithHooks\"\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from'./Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return ( \r\n    <div className={s.item}>\r\n      <img src='https://hornews.com/images/news_large/c1d4b2b8ec608ea72764c5678816d5c9.jpg'></img>\r\n           { props.message }\r\n          <div>\r\n          <span>like  </span> { props.likes }\r\n          </div>\r\n          </div>\r\n        );\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport s from'./MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLendthCreator,  required} from '../../../Utils/Validation/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n  const MyPosts = React.memo(props => {\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //    return nextProps != this.props || nextState != this.state;\r\n  // }\r\n\r\n    let postElements =\r\n     [...props.posts].reverse().map(p => <Post message={p.message} likes={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n\r\n    let onAddPost = (values) => {\r\n      props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className={s.postsBlock}>\r\n        <h3>my posts</h3>\r\n        <AddNewPostReduxForm onSubmit={onAddPost} />\r\n        <div className={s.posts}>\r\n          {postElements}\r\n        </div>\r\n      </div>\r\n    );\r\n  })\r\n\r\n\r\n\r\nconst maxLendth10 = maxLendthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n     <Field name=\"newPostText\" component={Textarea} validate={[required, maxLendth10]} placeholder={\"Post message\"}/>\r\n    </div>\r\n  <div>\r\n     <button>Add post</button>\r\n  </div>\r\n</form>\r\n  )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({ form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\nexport default MyPosts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class MyPosts extends React.Component{\r\n//   constructor(props){\r\n//     super(props)\r\n//      this.postElements = \r\n//     this.props.posts.map( p => <Post message={p.message} likes={p.likesCount} />);\r\n//     this.newPostElement = React.createRef();\r\n//     this.onAddPost = () => {\r\n//     this.props.addPost();\r\n//   }\r\n//     this.onPostChange = () => {\r\n//     this.text = this.newPostElement.current.value;\r\n//     this.props.updateNewPostText(this.text);\r\n//   }\r\n//   }\r\n//   render(){\r\n//     return (\r\n//       <div className={s.postsBlock}> \r\n//         <h3>my posts</h3>\r\n//           <div>\r\n//             <div>\r\n//               <textarea onChange={this.onPostChange} ref={this.newPostElement} \r\n//               value={this.props.newPostText} />\r\n//             </div>\r\n//           <div>\r\n//              <button onClick={this.onAddPost}>Add post</button>\r\n//           </div>\r\n//         </div>\r\n//           <div className={s.posts}>\r\n//             {this.postElements}\r\n//           </div>\r\n//         </div>\r\n//         );\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport {\r\n  addPostActionCreator\r\n} from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {\r\n  connect\r\n} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getStatus,updateStatus} from \"../../Redux/profile-reducer\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n      let userId = this.props.match.params.userId;\r\n      if(!userId) {\r\n        userId = this.props.authorizedUserId;\r\n        if(!userId) {\r\n          this.props.history.push(\"/login\");\r\n        }\r\n      }\r\n     this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n           <Profile {...this.props} \r\n           profile={this.props.profile}\r\n            status={this.props.status}\r\n             updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter\r\n  )(ProfileContainer);\r\n"],"sourceRoot":""}